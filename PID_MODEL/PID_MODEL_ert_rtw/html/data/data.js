var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"PID_MODEL","ref":false,"files":[{"name":"PID_MODEL.c","type":"source","group":"model","path":"D:\\Study\\University\\RobotIC\\Robocon\\3508PID\\PID_3508_MATLAB\\PID_MODEL\\PID_MODEL_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_MODEL.c\r\n *\r\n * Code generated for Simulink model 'PID_MODEL'.\r\n *\r\n * Model version                  : 2.6\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Sun Nov 12 23:11:19 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"PID_MODEL.h\"\r\n#include \"rtwtypes.h\"\r\n#include <math.h>\r\n\r\n/* Named constants for Chart: '<S4>/Chart1' */\r\n#define IN_ADD                         ((uint8_T)1U)\r\n#define IN_IDLE                        ((uint8_T)2U)\r\n#define IN_SUB                         ((uint8_T)3U)\r\n\r\n/* Named constants for Chart: '<S4>/Chart2' */\r\n#define IN_DB                          ((uint8_T)1U)\r\n#define IN_NDB                         ((uint8_T)2U)\r\n\r\n/* Block signals and states (default storage) */\r\nDW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY rtY;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL rtM_;\r\nRT_MODEL *const rtM = &rtM_;\r\nstatic void Chart1_Init(real_T *rty_u2);\r\nstatic void Chart1(real_T rtu_u1, real_T *rty_u2, DW_Chart1 *localDW);\r\nstatic void Chart2_Init(real_T *rty_op);\r\nstatic void Chart2(real_T rtu_in, real_T rtu_noabsin, real_T *rty_op, DW_Chart2 *\r\n                   localDW);\r\n\r\n/*\r\n * System initialize for atomic system:\r\n *    '<S4>/Chart1'\r\n *    '<S155>/Chart1'\r\n */\r\nstatic void Chart1_Init(real_T *rty_u2)\r\n{\r\n  *rty_u2 = 0.0;\r\n}\r\n\r\n/*\r\n * Output and update for atomic system:\r\n *    '<S4>/Chart1'\r\n *    '<S155>/Chart1'\r\n */\r\nstatic void Chart1(real_T rtu_u1, real_T *rty_u2, DW_Chart1 *localDW)\r\n{\r\n  /* Chart: '<S4>/Chart1' */\r\n  if (localDW->is_active_c2_PID_MODEL == 0U) {\r\n    localDW->is_active_c2_PID_MODEL = 1U;\r\n    localDW->is_c2_PID_MODEL = IN_IDLE;\r\n  } else {\r\n    switch (localDW->is_c2_PID_MODEL) {\r\n     case IN_ADD:\r\n      if (rtu_u1 <= -5000.0) {\r\n        localDW->is_c2_PID_MODEL = IN_SUB;\r\n        *rty_u2 = -1.0;\r\n      } else if ((rtu_u1 < 5000.0) && (rtu_u1 > -5000.0)) {\r\n        localDW->is_c2_PID_MODEL = IN_IDLE;\r\n      }\r\n      break;\r\n\r\n     case IN_IDLE:\r\n      if (rtu_u1 >= 5000.0) {\r\n        localDW->is_c2_PID_MODEL = IN_ADD;\r\n        *rty_u2 = 1.0;\r\n      } else if (rtu_u1 <= -5000.0) {\r\n        localDW->is_c2_PID_MODEL = IN_SUB;\r\n        *rty_u2 = -1.0;\r\n      } else {\r\n        *rty_u2 = 0.0;\r\n      }\r\n      break;\r\n\r\n     default:\r\n      /* case IN_SUB: */\r\n      if (rtu_u1 >= 5000.0) {\r\n        localDW->is_c2_PID_MODEL = IN_ADD;\r\n        *rty_u2 = 1.0;\r\n      } else if ((rtu_u1 < 5000.0) && (rtu_u1 > -5000.0)) {\r\n        localDW->is_c2_PID_MODEL = IN_IDLE;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  /* End of Chart: '<S4>/Chart1' */\r\n}\r\n\r\n/*\r\n * System initialize for atomic system:\r\n *    '<S4>/Chart2'\r\n *    '<S155>/Chart2'\r\n */\r\nstatic void Chart2_Init(real_T *rty_op)\r\n{\r\n  *rty_op = 0.0;\r\n}\r\n\r\n/*\r\n * Output and update for atomic system:\r\n *    '<S4>/Chart2'\r\n *    '<S155>/Chart2'\r\n */\r\nstatic void Chart2(real_T rtu_in, real_T rtu_noabsin, real_T *rty_op, DW_Chart2 *\r\n                   localDW)\r\n{\r\n  /* Chart: '<S4>/Chart2' */\r\n  if (localDW->is_active_c1_PID_MODEL == 0U) {\r\n    localDW->is_active_c1_PID_MODEL = 1U;\r\n    localDW->is_c1_PID_MODEL = IN_DB;\r\n  } else if (localDW->is_c1_PID_MODEL == IN_DB) {\r\n    if (rtu_in >= rtP.DeadBand) {\r\n      localDW->is_c1_PID_MODEL = IN_NDB;\r\n    } else {\r\n      *rty_op = 0.0;\r\n    }\r\n\r\n    /* case IN_NDB: */\r\n  } else if (rtu_in <= rtP.DeadBand) {\r\n    localDW->is_c1_PID_MODEL = IN_DB;\r\n  } else {\r\n    *rty_op = rtu_noabsin;\r\n  }\r\n\r\n  /* End of Chart: '<S4>/Chart2' */\r\n}\r\n\r\n/* Model step function */\r\nvoid PID_MODEL_step(void)\r\n{\r\n  real_T op_f;\r\n  real_T rtb_FilterCoefficient_c;\r\n  real_T rtb_FilterCoefficient_j1;\r\n  real_T rtb_FilterCoefficient_p;\r\n  real_T rtb_Sum_c;\r\n\r\n  /* SwitchCase: '<S1>/Switch Case' incorporates:\r\n   *  Inport: '<Root>/pitch_status'\r\n   */\r\n  switch ((int32_T)rtU.pitch_status) {\r\n   case 1:\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action_speed Subsystem' incorporates:\r\n     *  ActionPort: '<S3>/Action Port'\r\n     */\r\n    /* Sum: '<S3>/Sum' incorporates:\r\n     *  Inport: '<Root>/pitch_speed_rpm'\r\n     *  Inport: '<Root>/pitch_target'\r\n     */\r\n    rtb_Sum_c = rtU.pitch_target - rtU.pitch_speed_rpm;\r\n\r\n    /* Gain: '<S40>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S32>/Filter'\r\n     *  Gain: '<S31>/Derivative Gain'\r\n     *  Sum: '<S32>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_p = (rtP.Kd_s_3508 * rtb_Sum_c - rtDW.Filter_DSTATE_nz)\r\n      * 100.0;\r\n\r\n    /* Sum: '<S46>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S37>/Integrator'\r\n     *  Gain: '<S42>/Proportional Gain'\r\n     */\r\n    op_f = (rtP.Kp_s_3508 * rtb_Sum_c + rtDW.Integrator_DSTATE_o2) +\r\n      rtb_FilterCoefficient_p;\r\n\r\n    /* Saturate: '<S44>/Saturation' */\r\n    if (op_f > 16384.0) {\r\n      /* Outport: '<Root>/pitch_SPD_OUT' */\r\n      rtY.pitch_SPD_OUT = 16384.0;\r\n    } else if (op_f < -16384.0) {\r\n      /* Outport: '<Root>/pitch_SPD_OUT' */\r\n      rtY.pitch_SPD_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/pitch_SPD_OUT' */\r\n      rtY.pitch_SPD_OUT = op_f;\r\n    }\r\n\r\n    /* End of Saturate: '<S44>/Saturation' */\r\n\r\n    /* Update for DiscreteIntegrator: '<S32>/Filter' */\r\n    rtDW.Filter_DSTATE_nz += 0.001 * rtb_FilterCoefficient_p;\r\n\r\n    /* Update for DiscreteIntegrator: '<S37>/Integrator' incorporates:\r\n     *  Gain: '<S34>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_o2 += rtP.Ki_s_3508 * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action_speed Subsystem' */\r\n    break;\r\n\r\n   case 2:\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action_speed Subsystem1' incorporates:\r\n     *  ActionPort: '<S4>/Action Port'\r\n     */\r\n    /* Sum: '<S4>/Sum' incorporates:\r\n     *  Gain: '<S4>/Gain'\r\n     *  Inport: '<Root>/pitch_circle'\r\n     *  Inport: '<Root>/pitch_ecd'\r\n     *  Inport: '<Root>/pitch_target'\r\n     *  Sum: '<S4>/Sum2'\r\n     */\r\n    rtb_FilterCoefficient_p = rtU.pitch_target - (8191.0 * rtU.pitch_circle +\r\n      rtU.pitch_ecd);\r\n\r\n    /* Abs: '<S4>/Abs' */\r\n    rtb_Sum_c = fabs(rtb_FilterCoefficient_p);\r\n\r\n    /* Switch: '<S4>/Switch2' incorporates:\r\n     *  Constant: '<S4>/Constant'\r\n     */\r\n    if (!(rtb_Sum_c > rtP.DeadBand)) {\r\n      rtb_FilterCoefficient_p = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S4>/Switch2' */\r\n\r\n    /* Gain: '<S140>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S132>/Filter'\r\n     *  Gain: '<S131>/Derivative Gain'\r\n     *  Sum: '<S132>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_j1 = (rtP.Kd_a * rtb_FilterCoefficient_p -\r\n      rtDW.Filter_DSTATE_a) * 100.0;\r\n\r\n    /* Switch: '<S4>/Switch1' incorporates:\r\n     *  Constant: '<S4>/Constant'\r\n     *  Gain: '<S4>/Multiply'\r\n     *  Inport: '<Root>/pitch_speed_rpm'\r\n     *  Saturate: '<S144>/Saturation'\r\n     *  Sum: '<S4>/Sum1'\r\n     */\r\n    if (rtb_Sum_c > rtP.DeadBand) {\r\n      /* Sum: '<S146>/Sum' incorporates:\r\n       *  DiscreteIntegrator: '<S137>/Integrator'\r\n       *  Gain: '<S142>/Proportional Gain'\r\n       */\r\n      op_f = (rtP.Kp_a * rtb_FilterCoefficient_p + rtDW.Integrator_DSTATE_b) +\r\n        rtb_FilterCoefficient_j1;\r\n\r\n      /* Saturate: '<S144>/Saturation' */\r\n      if (op_f > 16384.0) {\r\n        op_f = 16384.0;\r\n      } else if (op_f < -16384.0) {\r\n        op_f = -16384.0;\r\n      }\r\n\r\n      rtb_Sum_c = rtP.trans * op_f - rtU.pitch_speed_rpm;\r\n    } else {\r\n      rtb_Sum_c = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S4>/Switch1' */\r\n\r\n    /* Gain: '<S92>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S84>/Filter'\r\n     *  Gain: '<S83>/Derivative Gain'\r\n     *  Sum: '<S84>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_c = (rtP.Kd_s * rtb_Sum_c - rtDW.Filter_DSTATE_i) *\r\n      100.0;\r\n\r\n    /* Sum: '<S98>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S89>/Integrator'\r\n     *  Gain: '<S94>/Proportional Gain'\r\n     */\r\n    op_f = (rtP.Kp_s * rtb_Sum_c + rtDW.Integrator_DSTATE_o) +\r\n      rtb_FilterCoefficient_c;\r\n\r\n    /* Saturate: '<S96>/Saturation' */\r\n    if (op_f > 16384.0) {\r\n      /* Outport: '<Root>/pitch_ANG_OUT' */\r\n      rtY.pitch_ANG_OUT = 16384.0;\r\n    } else if (op_f < -16384.0) {\r\n      /* Outport: '<Root>/pitch_ANG_OUT' */\r\n      rtY.pitch_ANG_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/pitch_ANG_OUT' */\r\n      rtY.pitch_ANG_OUT = op_f;\r\n    }\r\n\r\n    /* End of Saturate: '<S96>/Saturation' */\r\n\r\n    /* Chart: '<S4>/Chart1' incorporates:\r\n     *  Inport: '<Root>/pitch_ecd'\r\n     *  Inport: '<Root>/pitch_last_ecd'\r\n     *  Sum: '<S4>/Sum3'\r\n     */\r\n    Chart1(rtU.pitch_ecd - rtU.pitch_last_ecd, &rtDW.u2_d, &rtDW.sf_Chart1);\r\n\r\n    /* Outport: '<Root>/pitch_circle_out' incorporates:\r\n     *  Inport: '<Root>/pitch_circle'\r\n     *  Sum: '<S4>/Sum4'\r\n     */\r\n    rtY.pitch_circle_out = rtDW.u2_d + rtU.pitch_circle;\r\n\r\n    /* Chart: '<S4>/Chart2' */\r\n    Chart2(0.0, 0.0, &op_f, &rtDW.sf_Chart2);\r\n\r\n    /* Update for DiscreteIntegrator: '<S137>/Integrator' incorporates:\r\n     *  Gain: '<S134>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_b += rtP.Ki_a * rtb_FilterCoefficient_p * 0.001;\r\n\r\n    /* Update for DiscreteIntegrator: '<S132>/Filter' */\r\n    rtDW.Filter_DSTATE_a += 0.001 * rtb_FilterCoefficient_j1;\r\n\r\n    /* Update for DiscreteIntegrator: '<S84>/Filter' */\r\n    rtDW.Filter_DSTATE_i += 0.001 * rtb_FilterCoefficient_c;\r\n\r\n    /* Update for DiscreteIntegrator: '<S89>/Integrator' incorporates:\r\n     *  Gain: '<S86>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_o += rtP.Ki_s * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action_speed Subsystem1' */\r\n    break;\r\n  }\r\n\r\n  /* End of SwitchCase: '<S1>/Switch Case' */\r\n\r\n  /* SwitchCase: '<S2>/Switch Case' incorporates:\r\n   *  Inport: '<Root>/yaw_status'\r\n   */\r\n  switch ((int32_T)rtU.yaw_status) {\r\n   case 1:\r\n    /* Outputs for IfAction SubSystem: '<S2>/If Action_speed Subsystem' incorporates:\r\n     *  ActionPort: '<S154>/Action Port'\r\n     */\r\n    /* Sum: '<S154>/Sum' incorporates:\r\n     *  Inport: '<Root>/yaw_speed_rpm'\r\n     *  Inport: '<Root>/yaw_target'\r\n     */\r\n    rtb_Sum_c = rtU.yaw_target - rtU.yaw_speed_rpm;\r\n\r\n    /* Gain: '<S191>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S183>/Filter'\r\n     *  Gain: '<S182>/Derivative Gain'\r\n     *  Sum: '<S183>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_p = (rtP.Kd_s * rtb_Sum_c - rtDW.Filter_DSTATE_k) *\r\n      100.0;\r\n\r\n    /* Sum: '<S197>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S188>/Integrator'\r\n     *  Gain: '<S193>/Proportional Gain'\r\n     */\r\n    op_f = (rtP.Kp_s * rtb_Sum_c + rtDW.Integrator_DSTATE_e) +\r\n      rtb_FilterCoefficient_p;\r\n\r\n    /* Saturate: '<S195>/Saturation' */\r\n    if (op_f > 16384.0) {\r\n      /* Outport: '<Root>/yaw_SPD_OUT' */\r\n      rtY.yaw_SPD_OUT = 16384.0;\r\n    } else if (op_f < -16384.0) {\r\n      /* Outport: '<Root>/yaw_SPD_OUT' */\r\n      rtY.yaw_SPD_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/yaw_SPD_OUT' */\r\n      rtY.yaw_SPD_OUT = op_f;\r\n    }\r\n\r\n    /* End of Saturate: '<S195>/Saturation' */\r\n\r\n    /* Update for DiscreteIntegrator: '<S183>/Filter' */\r\n    rtDW.Filter_DSTATE_k += 0.001 * rtb_FilterCoefficient_p;\r\n\r\n    /* Update for DiscreteIntegrator: '<S188>/Integrator' incorporates:\r\n     *  Gain: '<S185>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_e += rtP.Ki_s * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S2>/If Action_speed Subsystem' */\r\n    break;\r\n\r\n   case 2:\r\n    /* Outputs for IfAction SubSystem: '<S2>/If Action_speed Subsystem1' incorporates:\r\n     *  ActionPort: '<S155>/Action Port'\r\n     */\r\n    /* Sum: '<S155>/Sum' incorporates:\r\n     *  Gain: '<S155>/Gain'\r\n     *  Inport: '<Root>/yaw_circle'\r\n     *  Inport: '<Root>/yaw_ecd'\r\n     *  Inport: '<Root>/yaw_target'\r\n     *  Sum: '<S155>/Sum2'\r\n     */\r\n    rtb_FilterCoefficient_p = rtU.yaw_target - (8191.0 * rtU.yaw_circle +\r\n      rtU.yaw_ecd);\r\n\r\n    /* Abs: '<S155>/Abs' */\r\n    rtb_Sum_c = fabs(rtb_FilterCoefficient_p);\r\n\r\n    /* Switch: '<S155>/Switch2' incorporates:\r\n     *  Constant: '<S155>/Constant'\r\n     */\r\n    if (!(rtb_Sum_c > rtP.DeadBand)) {\r\n      rtb_FilterCoefficient_p = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S155>/Switch2' */\r\n\r\n    /* Gain: '<S291>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S283>/Filter'\r\n     *  Gain: '<S282>/Derivative Gain'\r\n     *  Sum: '<S283>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_j1 = (rtP.Kd_a * rtb_FilterCoefficient_p -\r\n      rtDW.Filter_DSTATE) * 100.0;\r\n\r\n    /* Switch: '<S155>/Switch1' incorporates:\r\n     *  Constant: '<S155>/Constant'\r\n     *  Gain: '<S155>/Multiply'\r\n     *  Inport: '<Root>/yaw_speed_rpm'\r\n     *  Saturate: '<S295>/Saturation'\r\n     *  Sum: '<S155>/Sum1'\r\n     */\r\n    if (rtb_Sum_c > rtP.DeadBand) {\r\n      /* Sum: '<S297>/Sum' incorporates:\r\n       *  DiscreteIntegrator: '<S288>/Integrator'\r\n       *  Gain: '<S293>/Proportional Gain'\r\n       */\r\n      op_f = (rtP.Kp_a * rtb_FilterCoefficient_p + rtDW.Integrator_DSTATE) +\r\n        rtb_FilterCoefficient_j1;\r\n\r\n      /* Saturate: '<S295>/Saturation' */\r\n      if (op_f > 16384.0) {\r\n        op_f = 16384.0;\r\n      } else if (op_f < -16384.0) {\r\n        op_f = -16384.0;\r\n      }\r\n\r\n      rtb_Sum_c = rtP.trans * op_f - rtU.yaw_speed_rpm;\r\n    } else {\r\n      rtb_Sum_c = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S155>/Switch1' */\r\n\r\n    /* Gain: '<S243>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S235>/Filter'\r\n     *  Gain: '<S234>/Derivative Gain'\r\n     *  Sum: '<S235>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_c = (rtP.Kd_s * rtb_Sum_c - rtDW.Filter_DSTATE_n) *\r\n      100.0;\r\n\r\n    /* Sum: '<S249>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S240>/Integrator'\r\n     *  Gain: '<S245>/Proportional Gain'\r\n     */\r\n    op_f = (rtP.Kp_s * rtb_Sum_c + rtDW.Integrator_DSTATE_i) +\r\n      rtb_FilterCoefficient_c;\r\n\r\n    /* Saturate: '<S247>/Saturation' */\r\n    if (op_f > 16384.0) {\r\n      /* Outport: '<Root>/yaw_ANG_OUT' */\r\n      rtY.yaw_ANG_OUT = 16384.0;\r\n    } else if (op_f < -16384.0) {\r\n      /* Outport: '<Root>/yaw_ANG_OUT' */\r\n      rtY.yaw_ANG_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/yaw_ANG_OUT' */\r\n      rtY.yaw_ANG_OUT = op_f;\r\n    }\r\n\r\n    /* End of Saturate: '<S247>/Saturation' */\r\n\r\n    /* Chart: '<S155>/Chart1' incorporates:\r\n     *  Inport: '<Root>/yaw_ecd'\r\n     *  Inport: '<Root>/yaw_last_ecd'\r\n     *  Sum: '<S155>/Sum3'\r\n     */\r\n    Chart1(rtU.yaw_ecd - rtU.yaw_last_ecd, &rtDW.u2, &rtDW.sf_Chart1_d);\r\n\r\n    /* Outport: '<Root>/yaw_circle_out' incorporates:\r\n     *  Inport: '<Root>/yaw_circle'\r\n     *  Sum: '<S155>/Sum4'\r\n     */\r\n    rtY.yaw_circle_out = rtDW.u2 + rtU.yaw_circle;\r\n\r\n    /* Chart: '<S155>/Chart2' */\r\n    Chart2(0.0, 0.0, &op_f, &rtDW.sf_Chart2_i);\r\n\r\n    /* Update for DiscreteIntegrator: '<S288>/Integrator' incorporates:\r\n     *  Gain: '<S285>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE += rtP.Ki_a * rtb_FilterCoefficient_p * 0.001;\r\n\r\n    /* Update for DiscreteIntegrator: '<S283>/Filter' */\r\n    rtDW.Filter_DSTATE += 0.001 * rtb_FilterCoefficient_j1;\r\n\r\n    /* Update for DiscreteIntegrator: '<S235>/Filter' */\r\n    rtDW.Filter_DSTATE_n += 0.001 * rtb_FilterCoefficient_c;\r\n\r\n    /* Update for DiscreteIntegrator: '<S240>/Integrator' incorporates:\r\n     *  Gain: '<S237>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_i += rtP.Ki_s * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S2>/If Action_speed Subsystem1' */\r\n    break;\r\n  }\r\n\r\n  /* End of SwitchCase: '<S2>/Switch Case' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid PID_MODEL_initialize(void)\r\n{\r\n  {\r\n    real_T op_f;\r\n\r\n    /* SystemInitialize for IfAction SubSystem: '<S1>/If Action_speed Subsystem1' */\r\n\r\n    /* SystemInitialize for Chart: '<S4>/Chart1' */\r\n    Chart1_Init(&rtDW.u2_d);\r\n\r\n    /* SystemInitialize for Chart: '<S4>/Chart2' */\r\n    Chart2_Init(&op_f);\r\n\r\n    /* End of SystemInitialize for SubSystem: '<S1>/If Action_speed Subsystem1' */\r\n\r\n    /* SystemInitialize for IfAction SubSystem: '<S2>/If Action_speed Subsystem1' */\r\n\r\n    /* SystemInitialize for Chart: '<S155>/Chart1' */\r\n    Chart1_Init(&rtDW.u2);\r\n\r\n    /* SystemInitialize for Chart: '<S155>/Chart2' */\r\n    Chart2_Init(&op_f);\r\n\r\n    /* End of SystemInitialize for SubSystem: '<S2>/If Action_speed Subsystem1' */\r\n  }\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_MODEL.h","type":"header","group":"model","path":"D:\\Study\\University\\RobotIC\\Robocon\\3508PID\\PID_3508_MATLAB\\PID_MODEL\\PID_MODEL_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_MODEL.h\r\n *\r\n * Code generated for Simulink model 'PID_MODEL'.\r\n *\r\n * Model version                  : 2.6\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Sun Nov 12 23:11:19 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_PID_MODEL_h_\r\n#define RTW_HEADER_PID_MODEL_h_\r\n#ifndef PID_MODEL_COMMON_INCLUDES_\r\n#define PID_MODEL_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* PID_MODEL_COMMON_INCLUDES_ */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n#define PID_MODEL_M                    (rtM)\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM RT_MODEL;\r\n\r\n/* Block signals and states (default storage) for system '<S4>/Chart1' */\r\ntypedef struct {\r\n  uint8_T is_active_c2_PID_MODEL;      /* '<S4>/Chart1' */\r\n  uint8_T is_c2_PID_MODEL;             /* '<S4>/Chart1' */\r\n} DW_Chart1;\r\n\r\n/* Block signals and states (default storage) for system '<S4>/Chart2' */\r\ntypedef struct {\r\n  uint8_T is_active_c1_PID_MODEL;      /* '<S4>/Chart2' */\r\n  uint8_T is_c1_PID_MODEL;             /* '<S4>/Chart2' */\r\n} DW_Chart2;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  DW_Chart2 sf_Chart2_i;               /* '<S155>/Chart2' */\r\n  DW_Chart1 sf_Chart1_d;               /* '<S155>/Chart1' */\r\n  DW_Chart2 sf_Chart2;                 /* '<S4>/Chart2' */\r\n  DW_Chart1 sf_Chart1;                 /* '<S4>/Chart1' */\r\n  real_T u2;                           /* '<S155>/Chart1' */\r\n  real_T u2_d;                         /* '<S4>/Chart1' */\r\n  real_T Integrator_DSTATE;            /* '<S288>/Integrator' */\r\n  real_T Filter_DSTATE;                /* '<S283>/Filter' */\r\n  real_T Filter_DSTATE_n;              /* '<S235>/Filter' */\r\n  real_T Integrator_DSTATE_i;          /* '<S240>/Integrator' */\r\n  real_T Filter_DSTATE_k;              /* '<S183>/Filter' */\r\n  real_T Integrator_DSTATE_e;          /* '<S188>/Integrator' */\r\n  real_T Integrator_DSTATE_b;          /* '<S137>/Integrator' */\r\n  real_T Filter_DSTATE_a;              /* '<S132>/Filter' */\r\n  real_T Filter_DSTATE_i;              /* '<S84>/Filter' */\r\n  real_T Integrator_DSTATE_o;          /* '<S89>/Integrator' */\r\n  real_T Filter_DSTATE_nz;             /* '<S32>/Filter' */\r\n  real_T Integrator_DSTATE_o2;         /* '<S37>/Integrator' */\r\n} DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T pitch_speed_rpm;              /* '<Root>/pitch_speed_rpm' */\r\n  real_T pitch_target;                 /* '<Root>/pitch_target' */\r\n  real_T pitch_status;                 /* '<Root>/pitch_status' */\r\n  real_T pitch_ecd;                    /* '<Root>/pitch_ecd' */\r\n  real_T pitch_last_ecd;               /* '<Root>/pitch_last_ecd' */\r\n  real_T pitch_circle;                 /* '<Root>/pitch_circle' */\r\n  real_T yaw_speed_rpm;                /* '<Root>/yaw_speed_rpm' */\r\n  real_T yaw_target;                   /* '<Root>/yaw_target' */\r\n  real_T yaw_status;                   /* '<Root>/yaw_status' */\r\n  real_T yaw_ecd;                      /* '<Root>/yaw_ecd' */\r\n  real_T yaw_last_ecd;                 /* '<Root>/yaw_last_ecd' */\r\n  real_T yaw_circle;                   /* '<Root>/yaw_circle' */\r\n} ExtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T pitch_SPD_OUT;                /* '<Root>/pitch_SPD_OUT' */\r\n  real_T pitch_ANG_OUT;                /* '<Root>/pitch_ANG_OUT' */\r\n  real_T pitch_circle_out;             /* '<Root>/pitch_circle_out' */\r\n  real_T yaw_SPD_OUT;                  /* '<Root>/yaw_SPD_OUT' */\r\n  real_T yaw_ANG_OUT;                  /* '<Root>/yaw_ANG_OUT' */\r\n  real_T yaw_circle_out;               /* '<Root>/yaw_circle_out' */\r\n} ExtY;\r\n\r\n/* Parameters (default storage) */\r\nstruct P_ {\r\n  real_T DeadBand;                     /* Variable: DeadBand\r\n                                        * Referenced by:\r\n                                        *   '<S4>/Chart2'\r\n                                        *   '<S4>/Switch1'\r\n                                        *   '<S4>/Switch2'\r\n                                        *   '<S155>/Chart2'\r\n                                        *   '<S155>/Switch1'\r\n                                        *   '<S155>/Switch2'\r\n                                        */\r\n  real_T Kd_a;                         /* Variable: Kd_a\r\n                                        * Referenced by:\r\n                                        *   '<S131>/Derivative Gain'\r\n                                        *   '<S282>/Derivative Gain'\r\n                                        */\r\n  real_T Kd_s;                         /* Variable: Kd_s\r\n                                        * Referenced by:\r\n                                        *   '<S83>/Derivative Gain'\r\n                                        *   '<S182>/Derivative Gain'\r\n                                        *   '<S234>/Derivative Gain'\r\n                                        */\r\n  real_T Kd_s_3508;                    /* Variable: Kd_s_3508\r\n                                        * Referenced by: '<S31>/Derivative Gain'\r\n                                        */\r\n  real_T Ki_a;                         /* Variable: Ki_a\r\n                                        * Referenced by:\r\n                                        *   '<S134>/Integral Gain'\r\n                                        *   '<S285>/Integral Gain'\r\n                                        */\r\n  real_T Ki_s;                         /* Variable: Ki_s\r\n                                        * Referenced by:\r\n                                        *   '<S86>/Integral Gain'\r\n                                        *   '<S185>/Integral Gain'\r\n                                        *   '<S237>/Integral Gain'\r\n                                        */\r\n  real_T Ki_s_3508;                    /* Variable: Ki_s_3508\r\n                                        * Referenced by: '<S34>/Integral Gain'\r\n                                        */\r\n  real_T Kp_a;                         /* Variable: Kp_a\r\n                                        * Referenced by:\r\n                                        *   '<S142>/Proportional Gain'\r\n                                        *   '<S293>/Proportional Gain'\r\n                                        */\r\n  real_T Kp_s;                         /* Variable: Kp_s\r\n                                        * Referenced by:\r\n                                        *   '<S94>/Proportional Gain'\r\n                                        *   '<S193>/Proportional Gain'\r\n                                        *   '<S245>/Proportional Gain'\r\n                                        */\r\n  real_T Kp_s_3508;                    /* Variable: Kp_s_3508\r\n                                        * Referenced by: '<S42>/Proportional Gain'\r\n                                        */\r\n  real_T trans;                        /* Variable: trans\r\n                                        * Referenced by:\r\n                                        *   '<S4>/Multiply'\r\n                                        *   '<S155>/Multiply'\r\n                                        */\r\n};\r\n\r\n/* Parameters (default storage) */\r\ntypedef struct P_ P;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block parameters (default storage) */\r\nextern P rtP;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY rtY;\r\n\r\n/* Model entry point functions */\r\nextern void PID_MODEL_initialize(void);\r\nextern void PID_MODEL_step(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL *const rtM;\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'PID_MODEL'\r\n * '<S1>'   : 'PID_MODEL/Pitch'\r\n * '<S2>'   : 'PID_MODEL/Yaw'\r\n * '<S3>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem'\r\n * '<S4>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem1'\r\n * '<S5>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1'\r\n * '<S6>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup'\r\n * '<S7>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/D Gain'\r\n * '<S8>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Filter'\r\n * '<S9>'   : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs'\r\n * '<S10>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/I Gain'\r\n * '<S11>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain'\r\n * '<S12>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S13>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Integrator'\r\n * '<S14>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs'\r\n * '<S15>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/N Copy'\r\n * '<S16>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/N Gain'\r\n * '<S17>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/P Copy'\r\n * '<S18>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain'\r\n * '<S19>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal'\r\n * '<S20>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Saturation'\r\n * '<S21>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S22>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Sum'\r\n * '<S23>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk'\r\n * '<S24>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode'\r\n * '<S25>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S26>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S27>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S28>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal'\r\n * '<S29>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal'\r\n * '<S30>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S31>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S32>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S33>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S34>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S35>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S36>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S37>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S38>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S39>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S40>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S41>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S42>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S43>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S44>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S45>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S46>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S47>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S48>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S49>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S50>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S51>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S52>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S53>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n * '<S54>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Chart1'\r\n * '<S55>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Chart2'\r\n * '<S56>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller'\r\n * '<S57>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1'\r\n * '<S58>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup'\r\n * '<S59>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/D Gain'\r\n * '<S60>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Filter'\r\n * '<S61>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs'\r\n * '<S62>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/I Gain'\r\n * '<S63>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain'\r\n * '<S64>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk'\r\n * '<S65>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Integrator'\r\n * '<S66>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs'\r\n * '<S67>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/N Copy'\r\n * '<S68>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/N Gain'\r\n * '<S69>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/P Copy'\r\n * '<S70>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain'\r\n * '<S71>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal'\r\n * '<S72>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Saturation'\r\n * '<S73>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk'\r\n * '<S74>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Sum'\r\n * '<S75>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk'\r\n * '<S76>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode'\r\n * '<S77>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum'\r\n * '<S78>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral'\r\n * '<S79>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain'\r\n * '<S80>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal'\r\n * '<S81>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal'\r\n * '<S82>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup/Passthrough'\r\n * '<S83>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/D Gain/Internal Parameters'\r\n * '<S84>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Filter/Disc. Forward Euler Filter'\r\n * '<S85>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs/Internal IC - Filter'\r\n * '<S86>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/I Gain/Internal Parameters'\r\n * '<S87>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain/Passthrough'\r\n * '<S88>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk/Disabled'\r\n * '<S89>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Integrator/Discrete'\r\n * '<S90>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs/Internal IC'\r\n * '<S91>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/N Copy/Disabled'\r\n * '<S92>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/N Gain/Internal Parameters'\r\n * '<S93>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/P Copy/Disabled'\r\n * '<S94>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain/Internal Parameters'\r\n * '<S95>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal/Disabled'\r\n * '<S96>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Saturation/Enabled'\r\n * '<S97>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk/Disabled'\r\n * '<S98>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Sum/Sum_PID'\r\n * '<S99>'  : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk/Disabled'\r\n * '<S100>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode/Disabled'\r\n * '<S101>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum/Passthrough'\r\n * '<S102>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral/TsSignalSpecification'\r\n * '<S103>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain/Passthrough'\r\n * '<S104>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal/Forward_Path'\r\n * '<S105>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal/Forward_Path'\r\n * '<S106>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup'\r\n * '<S107>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/D Gain'\r\n * '<S108>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Filter'\r\n * '<S109>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs'\r\n * '<S110>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/I Gain'\r\n * '<S111>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain'\r\n * '<S112>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S113>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Integrator'\r\n * '<S114>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs'\r\n * '<S115>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/N Copy'\r\n * '<S116>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/N Gain'\r\n * '<S117>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/P Copy'\r\n * '<S118>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain'\r\n * '<S119>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal'\r\n * '<S120>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Saturation'\r\n * '<S121>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S122>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Sum'\r\n * '<S123>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk'\r\n * '<S124>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode'\r\n * '<S125>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S126>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S127>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S128>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal'\r\n * '<S129>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal'\r\n * '<S130>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S131>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S132>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S133>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S134>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S135>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S136>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S137>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S138>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S139>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S140>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S141>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S142>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S143>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S144>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S145>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S146>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S147>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S148>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S149>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S150>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S151>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S152>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S153>' : 'PID_MODEL/Pitch/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n * '<S154>' : 'PID_MODEL/Yaw/If Action_speed Subsystem'\r\n * '<S155>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1'\r\n * '<S156>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1'\r\n * '<S157>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup'\r\n * '<S158>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/D Gain'\r\n * '<S159>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Filter'\r\n * '<S160>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs'\r\n * '<S161>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/I Gain'\r\n * '<S162>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain'\r\n * '<S163>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S164>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Integrator'\r\n * '<S165>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs'\r\n * '<S166>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/N Copy'\r\n * '<S167>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/N Gain'\r\n * '<S168>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/P Copy'\r\n * '<S169>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain'\r\n * '<S170>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal'\r\n * '<S171>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Saturation'\r\n * '<S172>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S173>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Sum'\r\n * '<S174>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk'\r\n * '<S175>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode'\r\n * '<S176>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S177>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S178>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S179>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal'\r\n * '<S180>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal'\r\n * '<S181>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S182>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S183>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S184>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S185>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S186>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S187>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S188>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S189>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S190>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S191>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S192>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S193>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S194>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S195>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S196>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S197>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S198>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S199>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S200>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S201>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S202>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S203>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S204>' : 'PID_MODEL/Yaw/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n * '<S205>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Chart1'\r\n * '<S206>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Chart2'\r\n * '<S207>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller'\r\n * '<S208>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1'\r\n * '<S209>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup'\r\n * '<S210>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/D Gain'\r\n * '<S211>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Filter'\r\n * '<S212>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs'\r\n * '<S213>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/I Gain'\r\n * '<S214>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain'\r\n * '<S215>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk'\r\n * '<S216>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Integrator'\r\n * '<S217>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs'\r\n * '<S218>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/N Copy'\r\n * '<S219>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/N Gain'\r\n * '<S220>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/P Copy'\r\n * '<S221>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain'\r\n * '<S222>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal'\r\n * '<S223>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Saturation'\r\n * '<S224>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk'\r\n * '<S225>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Sum'\r\n * '<S226>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk'\r\n * '<S227>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode'\r\n * '<S228>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum'\r\n * '<S229>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral'\r\n * '<S230>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain'\r\n * '<S231>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal'\r\n * '<S232>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal'\r\n * '<S233>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup/Passthrough'\r\n * '<S234>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/D Gain/Internal Parameters'\r\n * '<S235>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Filter/Disc. Forward Euler Filter'\r\n * '<S236>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs/Internal IC - Filter'\r\n * '<S237>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/I Gain/Internal Parameters'\r\n * '<S238>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain/Passthrough'\r\n * '<S239>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk/Disabled'\r\n * '<S240>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Integrator/Discrete'\r\n * '<S241>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs/Internal IC'\r\n * '<S242>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/N Copy/Disabled'\r\n * '<S243>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/N Gain/Internal Parameters'\r\n * '<S244>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/P Copy/Disabled'\r\n * '<S245>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain/Internal Parameters'\r\n * '<S246>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal/Disabled'\r\n * '<S247>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Saturation/Enabled'\r\n * '<S248>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk/Disabled'\r\n * '<S249>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Sum/Sum_PID'\r\n * '<S250>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk/Disabled'\r\n * '<S251>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode/Disabled'\r\n * '<S252>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum/Passthrough'\r\n * '<S253>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral/TsSignalSpecification'\r\n * '<S254>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain/Passthrough'\r\n * '<S255>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal/Forward_Path'\r\n * '<S256>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal/Forward_Path'\r\n * '<S257>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup'\r\n * '<S258>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/D Gain'\r\n * '<S259>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Filter'\r\n * '<S260>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs'\r\n * '<S261>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/I Gain'\r\n * '<S262>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain'\r\n * '<S263>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S264>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Integrator'\r\n * '<S265>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs'\r\n * '<S266>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/N Copy'\r\n * '<S267>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/N Gain'\r\n * '<S268>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/P Copy'\r\n * '<S269>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain'\r\n * '<S270>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal'\r\n * '<S271>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Saturation'\r\n * '<S272>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S273>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Sum'\r\n * '<S274>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk'\r\n * '<S275>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode'\r\n * '<S276>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S277>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S278>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S279>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal'\r\n * '<S280>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal'\r\n * '<S281>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S282>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S283>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S284>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S285>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S286>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S287>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S288>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S289>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S290>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S291>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S292>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S293>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S294>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S295>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S296>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S297>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S298>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S299>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S300>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S301>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S302>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S303>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S304>' : 'PID_MODEL/Yaw/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n */\r\n#endif                                 /* RTW_HEADER_PID_MODEL_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"PID_MODEL_data.c","type":"source","group":"data","path":"D:\\Study\\University\\RobotIC\\Robocon\\3508PID\\PID_3508_MATLAB\\PID_MODEL\\PID_MODEL_ert_rtw","tag":"","groupDisplay":"数据文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: PID_MODEL_data.c\r\n *\r\n * Code generated for Simulink model 'PID_MODEL'.\r\n *\r\n * Model version                  : 2.6\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Sun Nov 12 23:11:19 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"PID_MODEL.h\"\r\n\r\n/* Block parameters (default storage) */\r\nP rtP = {\r\n  /* Variable: DeadBand\r\n   * Referenced by:\r\n   *   '<S4>/Chart2'\r\n   *   '<S4>/Switch1'\r\n   *   '<S4>/Switch2'\r\n   *   '<S155>/Chart2'\r\n   *   '<S155>/Switch1'\r\n   *   '<S155>/Switch2'\r\n   */\r\n  500.0,\r\n\r\n  /* Variable: Kd_a\r\n   * Referenced by:\r\n   *   '<S131>/Derivative Gain'\r\n   *   '<S282>/Derivative Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kd_s\r\n   * Referenced by:\r\n   *   '<S83>/Derivative Gain'\r\n   *   '<S182>/Derivative Gain'\r\n   *   '<S234>/Derivative Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kd_s_3508\r\n   * Referenced by: '<S31>/Derivative Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Ki_a\r\n   * Referenced by:\r\n   *   '<S134>/Integral Gain'\r\n   *   '<S285>/Integral Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Ki_s\r\n   * Referenced by:\r\n   *   '<S86>/Integral Gain'\r\n   *   '<S185>/Integral Gain'\r\n   *   '<S237>/Integral Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Ki_s_3508\r\n   * Referenced by: '<S34>/Integral Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kp_a\r\n   * Referenced by:\r\n   *   '<S142>/Proportional Gain'\r\n   *   '<S293>/Proportional Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kp_s\r\n   * Referenced by:\r\n   *   '<S94>/Proportional Gain'\r\n   *   '<S193>/Proportional Gain'\r\n   *   '<S245>/Proportional Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kp_s_3508\r\n   * Referenced by: '<S42>/Proportional Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: trans\r\n   * Referenced by:\r\n   *   '<S4>/Multiply'\r\n   *   '<S155>/Multiply'\r\n   */\r\n  0.5\r\n};\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"D:\\Study\\University\\RobotIC\\Robocon\\3508PID\\PID_3508_MATLAB\\PID_MODEL\\PID_MODEL_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'PID_MODEL'.\r\n *\r\n * Model version                  : 2.6\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Sun Nov 12 23:11:19 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-M\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"D:\\Study\\University\\RobotIC\\Robocon\\3508PID\\PID_3508_MATLAB\\PID_MODEL\\PID_MODEL_ert_rtw","tag":"","groupDisplay":"接口文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'PID_MODEL'.\r\n *\r\n * Model version                  : 2.6\r\n * Simulink Coder version         : 23.2 (R2023b) 01-Aug-2023\r\n * C/C++ source code generated on : Sun Nov 12 23:11:19 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"PID_MODEL.h\"\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true}};