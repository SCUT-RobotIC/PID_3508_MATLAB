var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"PID_MODEL/Subsystem","ref":false,"files":[{"name":"Subsystem.c","type":"source","group":"model","path":"F:\\THE_LIBRARY\\CODE_BASE\\ROBOSERVO\\PID_3508_MATLABVER\\MATLAB_PID3508-master\\MATLAB_PID3508-master\\PID_MODEL\\Subsystem_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem.c\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.31\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Thu Nov  9 21:28:02 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"Subsystem.h\"\r\n#include \"rtwtypes.h\"\r\n#include <math.h>\r\n\r\n/* Named constants for Chart: '<S3>/Chart1' */\r\n#define IN_ADD                         ((uint8_T)1U)\r\n#define IN_IDLE                        ((uint8_T)2U)\r\n#define IN_SUB                         ((uint8_T)3U)\r\n\r\n/* Named constants for Chart: '<S3>/Chart2' */\r\n#define IN_DB                          ((uint8_T)1U)\r\n#define IN_NDB                         ((uint8_T)2U)\r\n\r\n/* Block signals and states (default storage) */\r\nDW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY rtY;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL rtM_;\r\nRT_MODEL *const rtM = &rtM_;\r\n\r\n/* Model step function */\r\nvoid Subsystem_step(void)\r\n{\r\n  real_T rtb_FilterCoefficient;\r\n  real_T rtb_FilterCoefficient_m;\r\n  real_T rtb_FilterCoefficient_p;\r\n  real_T rtb_Sum3;\r\n  real_T rtb_Sum_c;\r\n\r\n  /* SwitchCase: '<S1>/Switch Case' incorporates:\r\n   *  Inport: '<Root>/status'\r\n   */\r\n  switch ((int32_T)rtU.status) {\r\n   case 1:\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action_speed Subsystem' incorporates:\r\n     *  ActionPort: '<S2>/Action Port'\r\n     */\r\n    /* Sum: '<S2>/Sum' incorporates:\r\n     *  Inport: '<Root>/speed_rpm'\r\n     *  Inport: '<Root>/target'\r\n     */\r\n    rtb_Sum_c = rtU.target - rtU.speed_rpm;\r\n\r\n    /* Gain: '<S39>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S31>/Filter'\r\n     *  Gain: '<S30>/Derivative Gain'\r\n     *  Sum: '<S31>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_p = (rtP.Kd_s * rtb_Sum_c - rtDW.Filter_DSTATE_n) *\r\n      100.0;\r\n\r\n    /* Sum: '<S45>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S36>/Integrator'\r\n     *  Gain: '<S41>/Proportional Gain'\r\n     */\r\n    rtb_Sum3 = (rtP.Kp_s * rtb_Sum_c + rtDW.Integrator_DSTATE_o2) +\r\n      rtb_FilterCoefficient_p;\r\n\r\n    /* Saturate: '<S43>/Saturation' */\r\n    if (rtb_Sum3 > 16384.0) {\r\n      /* Outport: '<Root>/SPD_OUT' */\r\n      rtY.SPD_OUT = 16384.0;\r\n    } else if (rtb_Sum3 < -16384.0) {\r\n      /* Outport: '<Root>/SPD_OUT' */\r\n      rtY.SPD_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/SPD_OUT' */\r\n      rtY.SPD_OUT = rtb_Sum3;\r\n    }\r\n\r\n    /* End of Saturate: '<S43>/Saturation' */\r\n\r\n    /* Update for DiscreteIntegrator: '<S31>/Filter' */\r\n    rtDW.Filter_DSTATE_n += 0.001 * rtb_FilterCoefficient_p;\r\n\r\n    /* Update for DiscreteIntegrator: '<S36>/Integrator' incorporates:\r\n     *  Gain: '<S33>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_o2 += rtP.Ki_s * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action_speed Subsystem' */\r\n    break;\r\n\r\n   case 2:\r\n    /* Outputs for IfAction SubSystem: '<S1>/If Action_speed Subsystem1' incorporates:\r\n     *  ActionPort: '<S3>/Action Port'\r\n     */\r\n    /* Sum: '<S3>/Sum' incorporates:\r\n     *  Gain: '<S3>/Gain'\r\n     *  Inport: '<Root>/circle'\r\n     *  Inport: '<Root>/ecd'\r\n     *  Inport: '<Root>/target'\r\n     *  Sum: '<S3>/Sum2'\r\n     */\r\n    rtb_FilterCoefficient_p = rtU.target - (8191.0 * rtU.circle + rtU.ecd);\r\n\r\n    /* Abs: '<S3>/Abs' */\r\n    rtb_Sum_c = fabs(rtb_FilterCoefficient_p);\r\n\r\n    /* Switch: '<S3>/Switch2' incorporates:\r\n     *  Constant: '<S3>/Constant'\r\n     */\r\n    if (!(rtb_Sum_c > rtP.DeadBand)) {\r\n      rtb_FilterCoefficient_p = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S3>/Switch2' */\r\n\r\n    /* Gain: '<S139>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S131>/Filter'\r\n     *  Gain: '<S130>/Derivative Gain'\r\n     *  Sum: '<S131>/SumD'\r\n     */\r\n    rtb_FilterCoefficient = (rtP.Kd_a * rtb_FilterCoefficient_p -\r\n      rtDW.Filter_DSTATE) * 100.0;\r\n\r\n    /* Switch: '<S3>/Switch1' incorporates:\r\n     *  Constant: '<S3>/Constant'\r\n     *  Gain: '<S3>/Multiply'\r\n     *  Inport: '<Root>/speed_rpm'\r\n     *  Saturate: '<S143>/Saturation'\r\n     *  Sum: '<S3>/Sum1'\r\n     */\r\n    if (rtb_Sum_c > rtP.DeadBand) {\r\n      /* Sum: '<S145>/Sum' incorporates:\r\n       *  DiscreteIntegrator: '<S136>/Integrator'\r\n       *  Gain: '<S141>/Proportional Gain'\r\n       */\r\n      rtb_Sum3 = (rtP.Kp_a * rtb_FilterCoefficient_p + rtDW.Integrator_DSTATE) +\r\n        rtb_FilterCoefficient;\r\n\r\n      /* Saturate: '<S143>/Saturation' */\r\n      if (rtb_Sum3 > 16384.0) {\r\n        rtb_Sum3 = 16384.0;\r\n      } else if (rtb_Sum3 < -16384.0) {\r\n        rtb_Sum3 = -16384.0;\r\n      }\r\n\r\n      rtb_Sum_c = rtP.trans * rtb_Sum3 - rtU.speed_rpm;\r\n    } else {\r\n      rtb_Sum_c = 0.0;\r\n    }\r\n\r\n    /* End of Switch: '<S3>/Switch1' */\r\n\r\n    /* Gain: '<S91>/Filter Coefficient' incorporates:\r\n     *  DiscreteIntegrator: '<S83>/Filter'\r\n     *  Gain: '<S82>/Derivative Gain'\r\n     *  Sum: '<S83>/SumD'\r\n     */\r\n    rtb_FilterCoefficient_m = (rtP.Kd_s * rtb_Sum_c - rtDW.Filter_DSTATE_i) *\r\n      100.0;\r\n\r\n    /* Sum: '<S97>/Sum' incorporates:\r\n     *  DiscreteIntegrator: '<S88>/Integrator'\r\n     *  Gain: '<S93>/Proportional Gain'\r\n     */\r\n    rtb_Sum3 = (rtP.Kp_s * rtb_Sum_c + rtDW.Integrator_DSTATE_o) +\r\n      rtb_FilterCoefficient_m;\r\n\r\n    /* Saturate: '<S95>/Saturation' */\r\n    if (rtb_Sum3 > 16384.0) {\r\n      /* Outport: '<Root>/ANG_OUT' */\r\n      rtY.ANG_OUT = 16384.0;\r\n    } else if (rtb_Sum3 < -16384.0) {\r\n      /* Outport: '<Root>/ANG_OUT' */\r\n      rtY.ANG_OUT = -16384.0;\r\n    } else {\r\n      /* Outport: '<Root>/ANG_OUT' */\r\n      rtY.ANG_OUT = rtb_Sum3;\r\n    }\r\n\r\n    /* End of Saturate: '<S95>/Saturation' */\r\n\r\n    /* Sum: '<S3>/Sum3' incorporates:\r\n     *  Inport: '<Root>/ecd'\r\n     *  Inport: '<Root>/last_ecd'\r\n     */\r\n    rtb_Sum3 = rtU.ecd - rtU.last_ecd;\r\n\r\n    /* Chart: '<S3>/Chart1' */\r\n    if (rtDW.is_active_c2_Subsystem == 0U) {\r\n      rtDW.is_active_c2_Subsystem = 1U;\r\n      rtDW.is_c2_Subsystem = IN_IDLE;\r\n    } else {\r\n      switch (rtDW.is_c2_Subsystem) {\r\n       case IN_ADD:\r\n        if (rtb_Sum3 <= -5000.0) {\r\n          rtDW.is_c2_Subsystem = IN_SUB;\r\n          rtDW.u2 = -1.0;\r\n        } else if ((rtb_Sum3 < 5000.0) && (rtb_Sum3 > -5000.0)) {\r\n          rtDW.is_c2_Subsystem = IN_IDLE;\r\n        }\r\n        break;\r\n\r\n       case IN_IDLE:\r\n        if (rtb_Sum3 >= 5000.0) {\r\n          rtDW.is_c2_Subsystem = IN_ADD;\r\n          rtDW.u2 = 1.0;\r\n        } else if (rtb_Sum3 <= -5000.0) {\r\n          rtDW.is_c2_Subsystem = IN_SUB;\r\n          rtDW.u2 = -1.0;\r\n        } else {\r\n          rtDW.u2 = 0.0;\r\n        }\r\n        break;\r\n\r\n       default:\r\n        /* case IN_SUB: */\r\n        if (rtb_Sum3 >= 5000.0) {\r\n          rtDW.is_c2_Subsystem = IN_ADD;\r\n          rtDW.u2 = 1.0;\r\n        } else if ((rtb_Sum3 < 5000.0) && (rtb_Sum3 > -5000.0)) {\r\n          rtDW.is_c2_Subsystem = IN_IDLE;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* End of Chart: '<S3>/Chart1' */\r\n\r\n    /* Outport: '<Root>/circle_out' incorporates:\r\n     *  Inport: '<Root>/circle'\r\n     *  Sum: '<S3>/Sum4'\r\n     */\r\n    rtY.circle_out = rtDW.u2 + rtU.circle;\r\n\r\n    /* Chart: '<S3>/Chart2' */\r\n    if (rtDW.is_active_c1_Subsystem == 0U) {\r\n      rtDW.is_active_c1_Subsystem = 1U;\r\n      rtDW.is_c1_Subsystem = IN_DB;\r\n    } else if (rtDW.is_c1_Subsystem == IN_DB) {\r\n      if (rtP.DeadBand <= 0.0) {\r\n        rtDW.is_c1_Subsystem = IN_NDB;\r\n      }\r\n\r\n      /* case IN_NDB: */\r\n    } else if (rtP.DeadBand >= 0.0) {\r\n      rtDW.is_c1_Subsystem = IN_DB;\r\n    }\r\n\r\n    /* End of Chart: '<S3>/Chart2' */\r\n\r\n    /* Update for DiscreteIntegrator: '<S136>/Integrator' incorporates:\r\n     *  Gain: '<S133>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE += rtP.Ki_a * rtb_FilterCoefficient_p * 0.001;\r\n\r\n    /* Update for DiscreteIntegrator: '<S131>/Filter' */\r\n    rtDW.Filter_DSTATE += 0.001 * rtb_FilterCoefficient;\r\n\r\n    /* Update for DiscreteIntegrator: '<S83>/Filter' */\r\n    rtDW.Filter_DSTATE_i += 0.001 * rtb_FilterCoefficient_m;\r\n\r\n    /* Update for DiscreteIntegrator: '<S88>/Integrator' incorporates:\r\n     *  Gain: '<S85>/Integral Gain'\r\n     */\r\n    rtDW.Integrator_DSTATE_o += rtP.Ki_s * rtb_Sum_c * 0.001;\r\n\r\n    /* End of Outputs for SubSystem: '<S1>/If Action_speed Subsystem1' */\r\n    break;\r\n  }\r\n\r\n  /* End of SwitchCase: '<S1>/Switch Case' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid Subsystem_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Subsystem.h","type":"header","group":"model","path":"F:\\THE_LIBRARY\\CODE_BASE\\ROBOSERVO\\PID_3508_MATLABVER\\MATLAB_PID3508-master\\MATLAB_PID3508-master\\PID_MODEL\\Subsystem_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.31\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Thu Nov  9 21:28:02 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_Subsystem_h_\r\n#define RTW_HEADER_Subsystem_h_\r\n#ifndef Subsystem_COMMON_INCLUDES_\r\n#define Subsystem_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* Subsystem_COMMON_INCLUDES_ */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n#define Subsystem_M                    (rtM)\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM RT_MODEL;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real_T u2;                           /* '<S3>/Chart1' */\r\n  real_T Integrator_DSTATE;            /* '<S136>/Integrator' */\r\n  real_T Filter_DSTATE;                /* '<S131>/Filter' */\r\n  real_T Filter_DSTATE_i;              /* '<S83>/Filter' */\r\n  real_T Integrator_DSTATE_o;          /* '<S88>/Integrator' */\r\n  real_T Filter_DSTATE_n;              /* '<S31>/Filter' */\r\n  real_T Integrator_DSTATE_o2;         /* '<S36>/Integrator' */\r\n  uint8_T is_active_c1_Subsystem;      /* '<S3>/Chart2' */\r\n  uint8_T is_c1_Subsystem;             /* '<S3>/Chart2' */\r\n  uint8_T is_active_c2_Subsystem;      /* '<S3>/Chart1' */\r\n  uint8_T is_c2_Subsystem;             /* '<S3>/Chart1' */\r\n} DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real_T speed_rpm;                    /* '<Root>/speed_rpm' */\r\n  real_T target;                       /* '<Root>/target' */\r\n  real_T status;                       /* '<Root>/status' */\r\n  real_T ecd;                          /* '<Root>/ecd' */\r\n  real_T last_ecd;                     /* '<Root>/last_ecd' */\r\n  real_T circle;                       /* '<Root>/circle' */\r\n} ExtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real_T SPD_OUT;                      /* '<Root>/SPD_OUT' */\r\n  real_T ANG_OUT;                      /* '<Root>/ANG_OUT' */\r\n  real_T circle_out;                   /* '<Root>/circle_out' */\r\n} ExtY;\r\n\r\n/* Parameters (default storage) */\r\nstruct P_ {\r\n  real_T DeadBand;                     /* Variable: DeadBand\r\n                                        * Referenced by:\r\n                                        *   '<S3>/Chart2'\r\n                                        *   '<S3>/Switch1'\r\n                                        *   '<S3>/Switch2'\r\n                                        */\r\n  real_T Kd_a;                         /* Variable: Kd_a\r\n                                        * Referenced by: '<S130>/Derivative Gain'\r\n                                        */\r\n  real_T Kd_s;                         /* Variable: Kd_s\r\n                                        * Referenced by:\r\n                                        *   '<S30>/Derivative Gain'\r\n                                        *   '<S82>/Derivative Gain'\r\n                                        */\r\n  real_T Ki_a;                         /* Variable: Ki_a\r\n                                        * Referenced by: '<S133>/Integral Gain'\r\n                                        */\r\n  real_T Ki_s;                         /* Variable: Ki_s\r\n                                        * Referenced by:\r\n                                        *   '<S33>/Integral Gain'\r\n                                        *   '<S85>/Integral Gain'\r\n                                        */\r\n  real_T Kp_a;                         /* Variable: Kp_a\r\n                                        * Referenced by: '<S141>/Proportional Gain'\r\n                                        */\r\n  real_T Kp_s;                         /* Variable: Kp_s\r\n                                        * Referenced by:\r\n                                        *   '<S41>/Proportional Gain'\r\n                                        *   '<S93>/Proportional Gain'\r\n                                        */\r\n  real_T trans;                        /* Variable: trans\r\n                                        * Referenced by: '<S3>/Multiply'\r\n                                        */\r\n};\r\n\r\n/* Parameters (default storage) */\r\ntypedef struct P_ P;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block parameters (default storage) */\r\nextern P rtP;\r\n\r\n/* Block signals and states (default storage) */\r\nextern DW rtDW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY rtY;\r\n\r\n/* Model entry point functions */\r\nextern void Subsystem_initialize(void);\r\nextern void Subsystem_step(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL *const rtM;\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('PID_MODEL/Subsystem')    - opens subsystem PID_MODEL/Subsystem\r\n * hilite_system('PID_MODEL/Subsystem/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'PID_MODEL'\r\n * '<S1>'   : 'PID_MODEL/Subsystem'\r\n * '<S2>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem'\r\n * '<S3>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem1'\r\n * '<S4>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1'\r\n * '<S5>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup'\r\n * '<S6>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/D Gain'\r\n * '<S7>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Filter'\r\n * '<S8>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs'\r\n * '<S9>'   : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/I Gain'\r\n * '<S10>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain'\r\n * '<S11>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S12>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Integrator'\r\n * '<S13>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs'\r\n * '<S14>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/N Copy'\r\n * '<S15>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/N Gain'\r\n * '<S16>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/P Copy'\r\n * '<S17>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain'\r\n * '<S18>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal'\r\n * '<S19>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Saturation'\r\n * '<S20>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S21>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Sum'\r\n * '<S22>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk'\r\n * '<S23>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode'\r\n * '<S24>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S25>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S26>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S27>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal'\r\n * '<S28>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal'\r\n * '<S29>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S30>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S31>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S32>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S33>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S34>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S35>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S36>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S37>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S38>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S39>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S40>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S41>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S42>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S43>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S44>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S45>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S46>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S47>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S48>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S49>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S50>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S51>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S52>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n * '<S53>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Chart1'\r\n * '<S54>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Chart2'\r\n * '<S55>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller'\r\n * '<S56>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1'\r\n * '<S57>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup'\r\n * '<S58>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/D Gain'\r\n * '<S59>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Filter'\r\n * '<S60>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs'\r\n * '<S61>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/I Gain'\r\n * '<S62>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain'\r\n * '<S63>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk'\r\n * '<S64>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Integrator'\r\n * '<S65>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs'\r\n * '<S66>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/N Copy'\r\n * '<S67>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/N Gain'\r\n * '<S68>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/P Copy'\r\n * '<S69>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain'\r\n * '<S70>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal'\r\n * '<S71>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Saturation'\r\n * '<S72>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk'\r\n * '<S73>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Sum'\r\n * '<S74>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk'\r\n * '<S75>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode'\r\n * '<S76>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum'\r\n * '<S77>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral'\r\n * '<S78>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain'\r\n * '<S79>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal'\r\n * '<S80>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal'\r\n * '<S81>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Anti-windup/Passthrough'\r\n * '<S82>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/D Gain/Internal Parameters'\r\n * '<S83>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Filter/Disc. Forward Euler Filter'\r\n * '<S84>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Filter ICs/Internal IC - Filter'\r\n * '<S85>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/I Gain/Internal Parameters'\r\n * '<S86>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain/Passthrough'\r\n * '<S87>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Ideal P Gain Fdbk/Disabled'\r\n * '<S88>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Integrator/Discrete'\r\n * '<S89>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Integrator ICs/Internal IC'\r\n * '<S90>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/N Copy/Disabled'\r\n * '<S91>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/N Gain/Internal Parameters'\r\n * '<S92>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/P Copy/Disabled'\r\n * '<S93>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Parallel P Gain/Internal Parameters'\r\n * '<S94>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Reset Signal/Disabled'\r\n * '<S95>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Saturation/Enabled'\r\n * '<S96>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Saturation Fdbk/Disabled'\r\n * '<S97>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Sum/Sum_PID'\r\n * '<S98>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Sum Fdbk/Disabled'\r\n * '<S99>'  : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode/Disabled'\r\n * '<S100>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tracking Mode Sum/Passthrough'\r\n * '<S101>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Integral/TsSignalSpecification'\r\n * '<S102>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/Tsamp - Ngain/Passthrough'\r\n * '<S103>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/postSat Signal/Forward_Path'\r\n * '<S104>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller/preSat Signal/Forward_Path'\r\n * '<S105>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup'\r\n * '<S106>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/D Gain'\r\n * '<S107>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Filter'\r\n * '<S108>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs'\r\n * '<S109>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/I Gain'\r\n * '<S110>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain'\r\n * '<S111>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk'\r\n * '<S112>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Integrator'\r\n * '<S113>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs'\r\n * '<S114>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/N Copy'\r\n * '<S115>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/N Gain'\r\n * '<S116>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/P Copy'\r\n * '<S117>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain'\r\n * '<S118>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal'\r\n * '<S119>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Saturation'\r\n * '<S120>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk'\r\n * '<S121>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Sum'\r\n * '<S122>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk'\r\n * '<S123>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode'\r\n * '<S124>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum'\r\n * '<S125>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral'\r\n * '<S126>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain'\r\n * '<S127>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal'\r\n * '<S128>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal'\r\n * '<S129>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Anti-windup/Passthrough'\r\n * '<S130>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/D Gain/Internal Parameters'\r\n * '<S131>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Filter/Disc. Forward Euler Filter'\r\n * '<S132>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Filter ICs/Internal IC - Filter'\r\n * '<S133>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/I Gain/Internal Parameters'\r\n * '<S134>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain/Passthrough'\r\n * '<S135>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Ideal P Gain Fdbk/Disabled'\r\n * '<S136>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Integrator/Discrete'\r\n * '<S137>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Integrator ICs/Internal IC'\r\n * '<S138>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/N Copy/Disabled'\r\n * '<S139>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/N Gain/Internal Parameters'\r\n * '<S140>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/P Copy/Disabled'\r\n * '<S141>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Parallel P Gain/Internal Parameters'\r\n * '<S142>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Reset Signal/Disabled'\r\n * '<S143>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Saturation/Enabled'\r\n * '<S144>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Saturation Fdbk/Disabled'\r\n * '<S145>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Sum/Sum_PID'\r\n * '<S146>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Sum Fdbk/Disabled'\r\n * '<S147>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode/Disabled'\r\n * '<S148>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tracking Mode Sum/Passthrough'\r\n * '<S149>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Integral/TsSignalSpecification'\r\n * '<S150>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/Tsamp - Ngain/Passthrough'\r\n * '<S151>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/postSat Signal/Forward_Path'\r\n * '<S152>' : 'PID_MODEL/Subsystem/If Action_speed Subsystem1/Discrete PID Controller1/preSat Signal/Forward_Path'\r\n */\r\n#endif                                 /* RTW_HEADER_Subsystem_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Subsystem_data.c","type":"source","group":"data","path":"F:\\THE_LIBRARY\\CODE_BASE\\ROBOSERVO\\PID_3508_MATLABVER\\MATLAB_PID3508-master\\MATLAB_PID3508-master\\PID_MODEL\\Subsystem_ert_rtw","tag":"","groupDisplay":"数据文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: Subsystem_data.c\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.31\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Thu Nov  9 21:28:02 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"Subsystem.h\"\r\n\r\n/* Block parameters (default storage) */\r\nP rtP = {\r\n  /* Variable: DeadBand\r\n   * Referenced by:\r\n   *   '<S3>/Chart2'\r\n   *   '<S3>/Switch1'\r\n   *   '<S3>/Switch2'\r\n   */\r\n  500.0,\r\n\r\n  /* Variable: Kd_a\r\n   * Referenced by: '<S130>/Derivative Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kd_s\r\n   * Referenced by:\r\n   *   '<S30>/Derivative Gain'\r\n   *   '<S82>/Derivative Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Ki_a\r\n   * Referenced by: '<S133>/Integral Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Ki_s\r\n   * Referenced by:\r\n   *   '<S33>/Integral Gain'\r\n   *   '<S85>/Integral Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kp_a\r\n   * Referenced by: '<S141>/Proportional Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: Kp_s\r\n   * Referenced by:\r\n   *   '<S41>/Proportional Gain'\r\n   *   '<S93>/Proportional Gain'\r\n   */\r\n  0.0,\r\n\r\n  /* Variable: trans\r\n   * Referenced by: '<S3>/Multiply'\r\n   */\r\n  0.5\r\n};\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"F:\\THE_LIBRARY\\CODE_BASE\\ROBOSERVO\\PID_3508_MATLABVER\\MATLAB_PID3508-master\\MATLAB_PID3508-master\\PID_MODEL\\Subsystem_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.31\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Thu Nov  9 21:28:02 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex-M\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32    long long:  64\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T, ulonglong_T.           *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"F:\\THE_LIBRARY\\CODE_BASE\\ROBOSERVO\\PID_3508_MATLABVER\\MATLAB_PID3508-master\\MATLAB_PID3508-master\\PID_MODEL\\Subsystem_ert_rtw","tag":"","groupDisplay":"接口文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtmodel.h\r\n *\r\n * Code generated for Simulink model 'Subsystem'.\r\n *\r\n * Model version                  : 1.31\r\n * Simulink Coder version         : 9.9 (R2023a) 19-Nov-2022\r\n * C/C++ source code generated on : Thu Nov  9 21:28:02 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objectives:\r\n *    1. Execution efficiency\r\n *    2. RAM efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"Subsystem.h\"\r\n\r\n/* Macros generated for backwards compatibility  */\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((void*) 0)\r\n#endif\r\n#endif                                 /* RTW_HEADER_rtmodel_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true}};